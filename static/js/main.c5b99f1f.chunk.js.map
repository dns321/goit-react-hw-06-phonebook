{"version":3,"sources":["Components/contactForm/ContactForm.module.css","Components/contactList/ContactList.module.css","Components/filter/Filter.module.css","redux/contact-actions.js","Components/contactForm/ContactForm.js","Components/contactList/ContactList.js","Components/filter/Filter.js","Components/section/Section.js","Components/App.js","redux/contact-reducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","data","payload","id","uuidv4","deleteContact","filterContact","ContactForm","state","name","number","handlerChange","event","currentTarget","value","setState","checkUniqueContact","props","find","contact","handleSubmit","preventDefault","onSubmit","reset","alert","this","className","style","inputStyle","type","placeholder","onChange","Component","connect","contacts","items","map","dispatch","contactsActions","getVisibleContacts","allContacts","filter","normolizedFilter","toLowerCase","includes","itemContact","itemContactBtn","onClick","target","inputFilter","Section","children","App","createReducer","action","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPrsistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c5b99f1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputStyle\":\"ContactForm_inputStyle__3zEtp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContact\":\"ContactList_itemContact__2fZ9P\",\"itemContactBtn\":\"ContactList_itemContactBtn__1o9gS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputFilter\":\"Filter_inputFilter__2HVL4\"};","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\n// const addContact = data => ({\n//   type: types.ADD,\n//   payload: {\n//     id: uuidv4(),\n//     ...data,\n//   },\n// });\n\nconst addContact = createAction('contact/add', data => ({\n  payload: {\n    id: uuidv4(),\n    ...data,\n  },\n}));\n\n// const deleteContact = contactId => ({\n//   type: types.DELETE,\n//   payload: contactId,\n// });\n\nconst deleteContact = createAction('contact/delete');\n\n// const filterContact = value => ({\n//   type: types.CHANGE_FILTER,\n//   payload: value,\n// });\n\nconst filterContact = createAction('contact/changeFilter');\n\nexport default { addContact, deleteContact, filterContact };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contact-actions';\nimport style from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handlerChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  checkUniqueContact = name => {\n    const findeContact = !this.props.name.find(contact => contact === name);\n    return findeContact;\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name } = this.state;\n    this.checkUniqueContact(name);\n\n    if (this.state.name !== '') {\n      if (!this.checkUniqueContact(name)) {\n        alert(`'${name} isalready in contacts'`);\n        return;\n      } else {\n        this.props.onSubmit(this.state);\n        this.reset();\n      }\n      return;\n    }\n    alert('Enter the name and number');\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            className={style.inputStyle}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name\"\n            value={this.state.name}\n            onChange={this.handlerChange}\n          ></input>\n        </label>\n\n        <label>\n          Number\n          <input\n            className={style.inputStyle}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Enter phone namber\"\n            value={this.state.number}\n            onChange={this.handlerChange}\n          ></input>\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  name: state.contacts.items.map(({ name }) => name),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: data => dispatch(contactsActions.addContact(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contact-actions';\nimport style from './ContactList.module.css';\n\nconst ContactList = ({ contacts, deleteContact }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={style.itemContact}>\n        {name}: {number}\n        <button\n          className={style.itemContactBtn}\n          type=\"button\"\n          onClick={() => deleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\nconst getVisibleContacts = (allContacts, filter) => {\n  const normolizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normolizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: id => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contact-actions';\nimport style from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    Find contacts by name\n    <input\n      className={style.inputFilter}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    ></input>\n  </label>\n);\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event =>\n    dispatch(contactsActions.filterContact(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport style from './Section.module.css';\n\nconst Section = ({ children }) => <section>{children}</section>;\n\nexport default Section;\n","import React from 'react';\nimport './App.scss';\nimport ContactForm from './contactForm/ContactForm';\nimport ContactList from './contactList/ContactList';\nimport Filter from './filter/Filter';\nimport Section from './section/Section';\n\nconst App = () => {\n  return (\n    <>\n      <Section>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport action from './contact-actions';\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       return [...state, payload];\n\n//     case types.DELETE:\n//       return state.filter(contact => contact.id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst items = createReducer([], {\n  [action.addContact]: (state, { payload }) => [...state, payload],\n  [action.deleteContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case types.CHANGE_FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst filter = createReducer('', {\n  [action.filterContact]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { createStore, combineReducers } from 'redux';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport contactReducer from './contact-reducer.js';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport Filter from '../Components/filter/Filter.js';\n\n// const rootReducer = combineReducers({\n//   contacts: contactReducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPrsistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPrsistConfig, contactReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}